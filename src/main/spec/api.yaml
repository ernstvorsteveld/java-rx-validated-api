openapi: 3.0.3
info:
  title: Employees API
  version: 1.0.0
paths:
  /employees:
    post:
      tags:
        - Employee
      operationId: createEmployee
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEmployeeRequest'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateEmployeeResponse"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        401:
          description: Unauthorized
        403:
          description: Forbidden
  /employees/{id}:
    get:
      tags:
        - Employee
      operationId: getEmployee
      summary: Get a employee by id
      parameters:
        - in: path
          name: id
          schema:
            type: string
            pattern: uuid
          required: true
          description: The id of the employee to get
      responses:
        200:
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetEmployeeResponse"
    patch:
      tags:
        - Employee
      operationId: patchEmployee
      summary: Patch employee with id
      parameters:
        - in: path
          name: id
          schema:
            type: string
            pattern: uuid
          required: true
          description: The id of the employee to patch
      requestBody:
        required: true
        content:
          application/json-patch+json:
            schema:
              type: string
              format: RFC 6902
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PatchEmployeeResponse"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        401:
          description: Unauthorized
        403:
          description: Forbidden
components:
  schemas:
    ErrorResponse:
      properties:
        code:
          type: string
        error:
          type: string
        url:
          type: string
    CreateEmployeeRequest:
      allOf:
        - $ref: "#/components/schemas/EmployeePayload"
    GetEmployeeResponse:
      allOf:
        - $ref: "#/components/schemas/EmployeePayload"
    CreateEmployeeResponse:
      allOf:
        - type: object
          properties:
            id:
              type: string
              pattern: uuid
        - $ref: "#/components/schemas/EmployeePayload"
    EmployeesResponse:
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/EmployeePayload"
    JSONPatchRequestAddReplaceTest:
      type: object
      additionalProperties: false
      required:
        - value
        - op
        - path
      properties:
        path:
          description: A JSON Pointer path.
          type: string
        op:
          description: The operation to perform.
          type: string
          enum:
            - add
            - replace
            - test
        value:
          description: The value to add, replace or test.
    JSONPatchRequestRemove:
      additionalProperties: false
      required:
        - op
        - path
      properties:
        path:
          description: A JSON Pointer path.
          type: string
        op:
          description: The operation to perform.
          type: string
          enum:
            - remove
    JSONPatchRequestMoveCopy:
      additionalProperties: false
      required:
        - from
        - op
        - path
      properties:
        path:
          description: A JSON Pointer path.
          type: string
        op:
          description: The operation to perform.
          type: string
          enum:
            - move
            - copy
    PatchEmployeeResponse:
      allOf:
        - type: object
          properties:
            id:
              type: string
              pattern: uuid
        - $ref: "#/components/schemas/EmployeePayload"
    EmployeePayload:
      properties:
        firstName:
          type: string
          description: First Name
          example: "John"
          minLength: 2
          maxLength: 255
          pattern: "^[a-zA-Z]+(-[a-zA-Z]+)*$"
        lastName:
          type: string
          description: Last Name
          example: "Lim"
          minLength: 2
          maxLength: 255
        dateOfBirth:
          type: string
          pattern: date
          description: dateOfBirth
          example: "2017-07-21"
      required:
        - firstName
        - lastName
        - age